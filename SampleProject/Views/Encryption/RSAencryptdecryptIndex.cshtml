@model RSAModel


@if (TempData["SubmitPublicKeyFromClientsuccess"] != null)
{
    <div class="alert alert-success">
        @TempData["SubmitPublicKeyFromClientsuccess"]
    </div>
}



<div style="position:center ; text-align:center">

    @using (Html.BeginForm("RsaEncrypt", "Encryption", FormMethod.Post))
    {
        <div>
            <h2> RSA Algorithm </h2>
            <input type="hidden" name="privateKey" value="@Model.privateKeygeneration" />
            <input type="hidden" name="publicKey" value="@Model.publicKeygeneration" />

            <label>Text to Encrypt:</label>
            <input type="text" name="model.RSAencryption.Text" placeholder="Enter Text" value="@Model.RSAencryption.Text" />
            @*   @Html.TextBoxFor(m => m.RSAencryption.Text) *@
        </div>
        <div>
            <label>Public Key:</label>
            <input type="text" name="model.RSAencryption.UserInputKey" placeholder="Enter Public Key" />
            @*   @Html.TextBoxFor(m => m.RSAencryption.PublicKey) *@
        </div>
        <div>
            <br />
            <input type="hidden" name="client" value="client1" />
            <input class="btn btn-primary" type="submit" value="Encrypt" />
            <input class="btn btn-info" type="submit" asp-controller="Encryption" asp-action="GenerateKeyforClient1" value="Generate Keys" />
        </div>
        <br />

    }

    @* digital signature  *@


    @using (Html.BeginForm("SignMessage", "Encryption", FormMethod.Post))

    {

        <h6> Create Signature </h6>
        <h7> Text </h7>  <input type="text" name="message" value="@Model.RSAencryption.Text" /> <br />
        <h7> Private Key</h7> <input type="text" name="privateKey" value="" /> <br />
        <input type="hidden" name="publicKey" value="@Model.RSAencryption.PublicKey" />
        @* <h7> Encrypted Text </h7>  *@
        <input type="hidden" name="hexString" value="@Model.RSAencryption.HexString" />

        <br />


        <input class="btn btn-primary" type="submit" value="Create" />


    }

    @using (Html.BeginForm("VerifySignature", "Encryption", FormMethod.Post))

    {

        <br />
        <div>
            <h6> Verify Signature </h6>

            <h7> CipherText </h7> <textarea type="text" name="model.RSAencryption.HexString" value="@Model.RSAencryption.HexString" placeholder="Add CipherText" cols="50"> @Model.RSAencryption.HexString  </textarea> <br />
            <h7> Private Key </h7>  <input type="text" name="privateKey" placeholder="Enter private key to decrypt cipher"  size="30" /> <br /> <br />
            <h7> Signature </h7>  <textarea type="text" name="model.Signature" value="@Model.Signature" cols="50"> @Model.Signature </textarea>  <br />
            <h7> Public Key</h7> <input type="text" name="publicKey" value="" placeholder="Enter public key to verify signature" size="30" />  <br /> <br />
            <input type="hidden" name="model.RSAencryption.PublicKey" value="@Model.RSAencryption.PublicKey" />
            <input type="hidden" name="model.RSAencryption.PrivateKey" value="@Model.RSAencryption.PrivateKey" /> <br />

            @if( !string.IsNullOrEmpty(Model.HashOutput))
            {
             <h7> Hash </h7>   <input type="text" name="model.HashOutput" value="@Model.HashOutput" placeholder="Add Signature" /> <br />
            }
            @if (Model.DisplayDecryptedTextInTextBox)
            {
                <h7> Original Text </h7>  <input type="text" name="model.RSAdecryption.DecryptedText" value="@Model.RSAdecryption.DecryptedText" placeholder="Enter original text" /> <br /> <br />
            }
            <input class="btn btn-primary" type="submit" asp-controller="Encryption" asp-action="RsaDecrypt" value="Decrypt CipherText" />

            <input class="btn btn-primary" asp-controller="Encryption" asp-action="HashText" type="submit" value="Hash" />
            <input class="btn btn-primary" type="submit" value="Verify Signature" />

        </div>

    }

    @if (!string.IsNullOrWhiteSpace(Model.Signature) && Model.DisplaySignature)
    {
        <br />
        <h6> Signature(Hex) : @Model.Signature </h6>
    }




    @* decrypt *@

    @*   @using (Html.BeginForm(FormMethod.Post))
    {

    <div style="text-align:center; height:initial">
    <div>

    <h4>Decrypt</h4>

    </div>


    <input type="hidden" name="client" value="client1" />


    <input type="hidden" name="OriginalText" value="@Model.RSAencryption.Text" />
    <H7> CipherText(Hex)</H7> @Html.TextBoxFor(m => m.RSAencryption.HexString, new { Name = "encryptedText" })<br />
    <h7> Private Key </h7>  <input type="text" name="key" placeholder="Enter key" /> <br /> <br />
    <input class="btn btn-primary" type="submit" asp-controller="Encryption" asp-action="RsaDecrypt" value="Decrypt" />
    <input class="btn btn-info" type="submit" asp-controller="Encryption" asp-action="GenerateKeyforClient1" value="Generate Keys" />
    </div>

    } *@
    </br>

    @if (Model.RSAdecryption != null)
    {
        if (!string.IsNullOrWhiteSpace(Model.RSAdecryption.DecryptedText))
        {
            <div style="text-align:left; height:auto">
                <h4> CipherText(Hex) </h4>
                <p style="color:darkblue; text-align:left;width:auto"> @Model.RSAdecryption.EncryptedText</p>
                <h4>Original Text</h4>
                <p style="color:darkblue; text-align:left;width:auto"> @Model.RSAdecryption.DecryptedText</p>

            </div>

        }
    }
</div>
<br />
<div>
    @if (!string.IsNullOrEmpty(Model.HashOutput))
    {
        <h6>  Hash : @Model.HashOutput </h6> <br/>
    }
</div>



<div>

    @if(Model.VerifiedSignature == RSAModel.VerifiedSign.YES)
    {
        <h6 style="color:purple"> Verified Signature : <h6 style="color:forestgreen">  Yes </h6> </h6>
    }else @if(Model.VerifiedSignature == RSAModel.VerifiedSign.NO)
    {
        <h6 style="color:purple"> Verified Signature :  <h6 style="color:red"> N0 </h6> </h6>
    } 
    else
    {
        <h6 style="color:purple"> Verified Signature :  <h6 style="color:red"> N/A </h6> </h6>
    }
</div>


<div style="text-align:center">

    @if (!string.IsNullOrWhiteSpace(Model.RSAencryption?.HexString))
    {
        <h7> <h6><b> Encrypted </b> </h6>  @Model.RSAencryption.HexString </h7> <br />
    }
    @if (!string.IsNullOrEmpty(Model.RSAencryption.PrivateKey) && !string.IsNullOrEmpty(Model.RSAencryption.PublicKey))
    {
        <h7> <h6> <b> Public key </b>  </h6> @Model.RSAencryption.PublicKey</h7>
        <h7> <h6> <b> Private key </b>  </h6> @Model.RSAencryption.PrivateKey</h7>

    }


</div>

<div style="text-align:center">


    @if (!string.IsNullOrEmpty(Model.publicKeygeneration) && !string.IsNullOrWhiteSpace(Model.privateKeygeneration))
    {

        <br />
        <h7> <h6><b> Public key </b> </h6> @Model.publicKeygeneration</h7> <br /> <br />
        <H7>
            <h6><b> Private Key </b></h6> @Model.privateKeygeneration

        </H7>
    }
</div>





@* <div style="position : absolute; top:50px;right:20px;padding:30px ">
    @using (Html.BeginForm(FormMethod.Post))
{

    <div style="text-align:right">
        <h2> Client 2 </h2>
        <div>

            <label>Text to Encrypt:</label>
            @Html.TextBoxFor(m => m.RSAencryption.Text)
        </div>
        <div>
            <label>Key(Public/Private):</label>
            @Html.TextBoxFor(m => m.RSAencryption.PublicKey)
        </div>
        <br />
        <input type="hidden" name="client" value="client2" />
        <input class="btn btn-primary" type="submit" asp-controller="Encryption" asp-action="Rsaencrypt" value="Encrypt" />
    </div>


    <br />

}
    @using (Html.BeginForm(FormMethod.Post))
{

    <div style="text-align:right; height:initial">
        <div>

            <h4>Decrypt</h4>
            @*  @Html.TextBoxFor(m => m.RSAdecryption.TextToDecrypt) *@


@*  <div>
                <label>Key(Public/Private):</label>
                @Html.TextBoxFor(m => m.RSAdecryption.privateKey)
            </div> *@
@*        <input type="hidden" name="client" value="client2" />
        <input class="btn btn-primary" type="submit" asp-controller="Encryption" asp-action="RsaDecrypt" value="Decrypt" />
        <input class="btn btn-info" type="submit" asp-controller="Encryption" asp-action="SubmitPublicKey" value="Submit Key" />
    </div>
}
    <br />
    @if(Model.RSAdecryption!= null)
{
 if(!string.IsNullOrWhiteSpace(Model.RSAdecryption.DecryptedText ) && Model.client =="client2" )
{
    <div style="text-align:right; height:auto">
        <h4> Encrypted Text : </h4>
        <p style="color:darkblue; text-align:right;width:auto"> @Model.RSAdecryption.EncryptedText</p>
        <h4>Decrypted Text:</h4>
        <p style="color:darkblue; text-align:right;width:auto"> @Model.RSAdecryption.DecryptedText</p>

    </div>

}


}
</div> *@

